using Foundation;
using ObjCRuntime;

namespace DirectoryWatcherXamariniOS
{
	// @protocol DirectoryWatcherDelegate <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface DirectoryWatcherDelegate
	{
		// @required -(void)directoryDidChange:(DirectoryWatcher *)folderWatcher;
		[Abstract]
		[Export ("directoryDidChange:")]
		void DirectoryDidChange (DirectoryWatcher folderWatcher);
	}

	// @interface DirectoryWatcher : NSObject
	[BaseType (typeof(NSObject))]
	interface DirectoryWatcher
	{
		[Wrap ("WeakDelegate")]
		DirectoryWatcherDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<DirectoryWatcherDelegate> delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// +(DirectoryWatcher *)watchFolderWithPath:(NSString *)watchPath delegate:(id<DirectoryWatcherDelegate>)watchDelegate;
		[Static]
		[Export ("watchFolderWithPath:delegate:")]
		DirectoryWatcher WatchFolderWithPath (string watchPath, DirectoryWatcherDelegate watchDelegate);

		// -(void)invalidate;
		[Export ("invalidate")]
		void Invalidate ();
	}
}
